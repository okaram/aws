Resources:
  DeadLetterQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      DelaySeconds: 0               # How long to delay messages
      MaximumMessageSize: 1024      # in bytes
      MessageRetentionPeriod: 3600  # in seconds; let's use an hour, just for fun 
      QueueName: DeadLetterQueue
      ReceiveMessageWaitTimeSeconds: 0 # don't wait to see if more messages appear
      VisibilityTimeout: 30

  FirstQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      DelaySeconds: 0               # How long to delay messages
      MaximumMessageSize: 1024      # in bytes
      MessageRetentionPeriod: 3600  # in seconds; let's use an hour, just for fun 
      QueueName: FirstQueue
      ReceiveMessageWaitTimeSeconds: 0 # don't wait to see if more messages appear
      VisibilityTimeout: 30
      RedrivePolicy:
        deadLetterTargetArn: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:DeadLetterQueue"
        # !GetAtt DeadLetterQueue.Arn
        #!Join [":", ["arn:aws:sqs", !Ref "AWS::Region",  !Ref "AWS::AccountId", "DeadLetterQueue1"]]
        maxReceiveCount: 2
